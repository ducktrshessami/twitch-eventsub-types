export var RequestHeaders;
(function (RequestHeaders) {
    RequestHeaders["MessageId"] = "twitch-eventsub-message-id";
    RequestHeaders["MessageRetry"] = "twitch-eventsub-message-retry";
    RequestHeaders["MessageType"] = "twitch-eventsub-message-type";
    RequestHeaders["MessageSignature"] = "twitch-eventsub-message-signature";
    RequestHeaders["MessageTimestamp"] = "twitch-eventsub-message-timestamp";
    RequestHeaders["SubscriptionType"] = "twitch-eventsub-subscription-type";
    RequestHeaders["SubscriptionVersion"] = "twitch-eventsub-subscription-version";
})(RequestHeaders = RequestHeaders || (RequestHeaders = {}));
export var NotificationType;
(function (NotificationType) {
    NotificationType["Notification"] = "notification";
    NotificationType["WebhookCallbackVerification"] = "webhook_callback_verification";
    NotificationType["Revocation"] = "revocation";
})(NotificationType = NotificationType || (NotificationType = {}));
export var SubscriptionType;
(function (SubscriptionType) {
    SubscriptionType["ChannelUpdate"] = "channel.update";
    SubscriptionType["ChannelFollow"] = "channel.follow";
    SubscriptionType["ChannelSubscribe"] = "channel.subscribe";
    SubscriptionType["ChannelSubscriptionEnd"] = "channel.subscription.end";
    SubscriptionType["ChannelSubscriptionGift"] = "channel.subscription.gift";
    SubscriptionType["ChannelSubscriptionMessage"] = "channel.subscription.message";
    SubscriptionType["ChannelCheer"] = "channel.cheer";
    SubscriptionType["ChannelRaid"] = "channel.raid";
    SubscriptionType["ChannelBan"] = "channel.ban";
    SubscriptionType["ChannelUnban"] = "channel.unban";
    SubscriptionType["ChannelModeratorAdd"] = "channel.moderator.add";
    SubscriptionType["ChannelModeratorRemove"] = "channel.moderator.remove";
    SubscriptionType["ChannelPointsCustomRewardAdd"] = "channel.channel_points_custom_reward.add";
    SubscriptionType["ChannelPointsCustomRewardUpdate"] = "channel.channel_points_custom_reward.update";
    SubscriptionType["ChannelPointsCustomRewardRemove"] = "channel.channel_points_custom_reward.remove";
    SubscriptionType["ChannelPointsCustomRewardRedemptionAdd"] = "channel.channel_points_custom_reward_redemption.add";
    SubscriptionType["ChannelPointsCustomRewardRedemptionUpdate"] = "channel.channel_points_custom_reward_redemption.update";
    SubscriptionType["ChannelPollBegin"] = "channel.poll.begin";
    SubscriptionType["ChannelPollProgress"] = "channel.poll.progress";
    SubscriptionType["ChannelPollEnd"] = "channel.poll.end";
    SubscriptionType["ChannelPredictionBegin"] = "channel.prediction.begin";
    SubscriptionType["ChannelPredictionProgress"] = "channel.prediction.progress";
    SubscriptionType["ChannelPredictionLock"] = "channel.prediction.lock";
    SubscriptionType["ChannelPredictionEnd"] = "channel.prediction.end";
    SubscriptionType["CharityDonation"] = "channel.charity_campaign.donate";
    SubscriptionType["CharityCampaignStart"] = "channel.charity_campaign.start";
    SubscriptionType["CharityCampaignProgress"] = "channel.charity_campaign.progress";
    SubscriptionType["CharityCampaignStop"] = "channel.charity_campaign.stop";
    SubscriptionType["DropEntitlementGrant"] = "drop.entitlement.grant";
    SubscriptionType["ExtensionBitsTransactionCreate"] = "extension.bits_transaction.create";
    SubscriptionType["GoalBegin"] = "channel.goal.begin";
    SubscriptionType["GoalProgress"] = "channel.goal.progress";
    SubscriptionType["GoalEnd"] = "channel.goal.end";
    SubscriptionType["HypeTrainBegin"] = "channel.hype_train.begin";
    SubscriptionType["HypeTrainProgress"] = "channel.hype_train.progress";
    SubscriptionType["HypeTrainEnd"] = "channel.hype_train.end";
    SubscriptionType["ShieldModeBegin"] = "channel.shield_mode.begin";
    SubscriptionType["ShieldModeEnd"] = "channel.shield_mode.end";
    SubscriptionType["ShoutoutCreate"] = "channel.shoutout.create";
    SubscriptionType["ShoutoutReceived"] = "channel.shoutout.receive";
    SubscriptionType["StreamOnline"] = "stream.online";
    SubscriptionType["StreamOffline"] = "stream.offline";
    SubscriptionType["UserAuthorizationGrant"] = "user.authorization.grant";
    SubscriptionType["UserAuthorizationRevoke"] = "user.authorization.revoke";
    SubscriptionType["UserUpdate"] = "user.update";
})(SubscriptionType = SubscriptionType || (SubscriptionType = {}));
export var SubscriptionStatus;
(function (SubscriptionStatus) {
    SubscriptionStatus["Enabled"] = "enabled";
    SubscriptionStatus["WebhookCallbackVerificationPending"] = "webhook_callback_verification_pending";
    SubscriptionStatus["WebhookCallbackVerificationFailed"] = "webhook_callback_verification_failed";
    SubscriptionStatus["NotificationFailuresExceeded"] = "notification_failures_exceeded";
    SubscriptionStatus["AuthorizationRevoked"] = "authorization_revoked";
    SubscriptionStatus["ModeratorRemoved"] = "moderator_removed";
    SubscriptionStatus["UserRemoved"] = "user_removed";
    SubscriptionStatus["VersionRemoved"] = "version_removed";
    SubscriptionStatus["WebsocketDisconnected"] = "websocket_disconnected";
    SubscriptionStatus["WebsocketFailedPingPong"] = "websocket_failed_ping_pong";
    SubscriptionStatus["WebsocketReceivedInboundTraffic"] = "websocket_received_inbound_traffic";
    SubscriptionStatus["WebsocketConnectionUnused"] = "websocket_connection_unused";
    SubscriptionStatus["WebsocketInternalError"] = "websocket_internal_error";
    SubscriptionStatus["WebsocketNetworkTimeout"] = "websocket_network_timeout";
    SubscriptionStatus["WebsocketNetworkError"] = "websocket_network_error";
})(SubscriptionStatus = SubscriptionStatus || (SubscriptionStatus = {}));
export var StreamType;
(function (StreamType) {
    StreamType["Live"] = "live";
    StreamType["Playlist"] = "playlist";
    StreamType["WatchParty"] = "watch_party";
    StreamType["Premiere"] = "premiere";
    StreamType["Rerun"] = "rerun";
    StreamType["Error"] = "";
})(StreamType = StreamType || (StreamType = {}));
export var TransportMethod;
(function (TransportMethod) {
    TransportMethod["Webhook"] = "webhook";
    TransportMethod["Websocket"] = "websocket";
})(TransportMethod = TransportMethod || (TransportMethod = {}));
export var UserType;
(function (UserType) {
    UserType["Admin"] = "admin";
    UserType["GlobalMod"] = "global_mod";
    UserType["Staff"] = "staff";
    UserType["Normal"] = "";
})(UserType = UserType || (UserType = {}));
export var BroadcasterType;
(function (BroadcasterType) {
    BroadcasterType["Affiliate"] = "affiliate";
    BroadcasterType["Partner"] = "partner";
    BroadcasterType["Normal"] = "";
})(BroadcasterType = BroadcasterType || (BroadcasterType = {}));
export var StreamFilterType;
(function (StreamFilterType) {
    StreamFilterType["All"] = "all";
    StreamFilterType["Live"] = "live";
})(StreamFilterType = StreamFilterType || (StreamFilterType = {}));
